; a) Write a function to return the n-th element of a list, or NIL if such an element does not exist;

; NthElem(l1l2...lm, n, pos) = 
; = nil , if m = 0
; = l1 , if n = pos
; = NthElem(l2...lm, n, pos + 1) , otherwise

(defun NthElem(l n pos)
  (cond
    ((null l) nil)
    ((= n pos) (car l))
    (t (NthElem (cdr l) n (+ pos 1)))
  )
)

(defun main(l n)
  (NthElem l n 0)
)


;b) Write a function to check whether an atom E is a member of a list which is not necessarily linear.


; checkAtom(l1l2...ln, elem) = 
; = nil , if n = 0
; = true , if l1 is an atom and l1 = elem
; = checkAtom(l1, elem) U checkAtom(l2...ln, elem) , if l1 is a list
; = checkAtom(l2...ln, elem) , otherwise


(defun checkAtom(l e)
  (cond
    ((null l) nil)
    ((and (atom (car l)) (equal (car l) elem)) T)
    ((listp (car l)) (or (checkAtom (car l) elem) (checkAtom (cdr l) elem))) 
    (T (checkAtom (cdr l) elem))
  )
)