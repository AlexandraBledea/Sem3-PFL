% 1. Write a predicate to generate the list of all subsets with all elements of a given list.
% Eg: [2, 3, 4] N=2 => [[2,3],[2,4],[3,4]]

% insert(l1l2...ln, elem) = 
% = {elem} U l1l2...ln
% = {l1} U insert(l2...ln, elem)

% insert(E:element, L:list, R: result list)
% (i,i,o)

insert(E,L,[E|L]).
insert(E,[H|T],[H|R]):-
    insert(E,T,R).

% comb(l1l2...ln, k) = 
% = l1, if k = 1 and n >= 1
% = comb(l2...ln, k), if k > 1
% = {l1} U comb(l2...ln, k-1), if k > 1

% comb(L:list, K:number, R:result list)
% (i,i,o)

comb([E|_],1,[E]).
comb([_|T],K,R):-
    K > 1,
    comb(T,K,R).
comb([H|T],K,[H|R]):-
    K > 1,
    K1 is K - 1,
    comb(T,K1,R).


% allsolutions(L:list, N:number, R:list)
% allsolutions(i, i, o)

allsolutions(L, K, R) :-
    findall(RPartial, comb(L, K, RPartial), R).