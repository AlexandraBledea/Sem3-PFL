% 7.
% a. Determine the position of the maximal element of a linear list.
%    Eg.: maxpos([10,14,12,13,14], L) produces L = [2,5]

% maxNumber(a,b) = 
% = a, if a >=b
% = b, otherwise

maxNumber(A, B, A) :- A >= B.
maxNumber(A, B, B) :- A < B.

% findMax(l1l2...ln) = 
% = l1, if n = 1
% = maxNumber(l1, findMax(l2...ln)), otherwise

% findMax(L:list, R:number)
% (i,o)

findMax([H],H).
findMax([H|T],R):-
    findMax(T,RM),
    maxNumber(H,RM,R).


% findPosMax(l1l2...ln, elem, pos) = 
% = [], if n = 0
% = {pos} U findPosMax(l2...ln, elem, pos + 1), if l1 = elem
% = findPosMax(l2...ln, elem, pos + 1), otherwisw

% findPosMax(L:list, E:number, P:number, R:list)
% (i,i,i,o)

findPosMax([],_,_,[]).
findPosMax([H|T],E,P,[P|R]):-
    H =:= E,
    P1 is P + 1,
    findPosMax(T,E,P1,R).
findPosMax([H|T],E,P,R):-
    H =\= E,
    P1 is P + 1,
    findPosMax(T,E,P1,R).

mainMax(L,R):-
    findMax(L,R1),
    findPosMax(L,R1,1,R).


% b. For a heterogeneous list, formed from integer numbers and list of numbers, write a predicate to replace
%    every sublist with the position of the maximum element from that sublist.
%    [1, [2, 3], [4, 1, 4], 3, 6, [7, 10, 1, 3, 9], 5, [1, 1, 1], 7] =>
%    [1, [2], [1, 3], 3, 6, [2], 5, [1, 2, 3], 7]


% heterList(l1l2...ln) = 
% = [], if n = 0
% = mainMax(l1) U heterList(l2...ln), if l1 is a list
% = {l1} U heterList(l2...ln), otherwise

% heterList(L:list, R:list)
% (i,o)

heterList([],[]).
heterList([H|T],[RM| R]):-
    is_list(H),
    !,
    mainMax(H,RM),
    heterList(T,R).
heterList([H|T], [H|R]):-
    heterList(T,R).


% heterList([1, [2, 3], [4, 1, 4], 3, 6, [7, 10, 1, 3, 9], 5, [1, 1, 1], 7], R).
% [1, [2], [1, 3], 3, 6, [2], 5, [1, 2, 3], 7]

